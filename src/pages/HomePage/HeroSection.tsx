import { useContext, useState, useEffect } from 'react';
import { NavLink, useNavigate } from 'react-router-dom';
import KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight';
import AuthenticationContext from '../../context/authentication';
import { motion } from 'framer-motion';
import Snackbar from '@mui/material/Snackbar';
import MuiAlert from '@mui/material/Alert';
import Slide from '@mui/material/Slide'; // Import Slide component

// Define type for language options
type LanguageOption = 'english' | 'hindi' | 'manipuri' | 'assamese';

// Define content type structure
type ContentType = {
  [key in LanguageOption]: {
    title: string;
    description: string;
    createAccount: string;
    viewProducts: string;
  }
};

const HeroSection = () => {
  const { logInData } = useContext(AuthenticationContext);
  const navigate = useNavigate();
  const [language, setLanguage] = useState<LanguageOption>('english');
  const [isVisible, setIsVisible] = useState(true);
  const [showSnackbar, setShowSnackbar] = useState(true);

  function TransitionUp(props: any) {
    return <Slide {...props} direction="up" />;
  }

  const fadeIn = {
    hidden: { opacity: 0, y: 20 },
    visible: { 
      opacity: 1, 
      y: 0,
      transition: { duration: 0.6 }
    }
  };

  const staggerChildren = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.3
      }
    }
  };

  const imageHover = {
    rest: { scale: 1 },
    hover: { 
      scale: 1.05,
      transition: { duration: 0.3 }
    }
  };

  const buttonHover = {
    rest: { scale: 1 },
    hover: { 
      scale: 1.05,
      backgroundColor: language === 'english' ? "#4a7c59" : "#558b65",
      transition: { duration: 0.2 }
    }
  };

  const content: ContentType = {
    english: {
      title: "From farm to table, Just a click away",
      description: "Welcome to our online marketplace connecting you directly to local farmers! Discover an abundance of freshly harvested produce, grown with care and passion. Embrace the farm-to-table experience from the comfort of your home. Join us in supporting local agriculture while savoring the taste of truly fresh, seasonal delights.",
      createAccount: "Create Account",
      viewProducts: "View Products"
    },
    hindi: {
      title: "‡§ñ‡•á‡§§ ‡§∏‡•á ‡§Æ‡•á‡§ú ‡§§‡§ï, ‡§¨‡§∏ ‡§è‡§ï ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§¶‡•Ç‡§∞",
      description: "‡§π‡§Æ‡§æ‡§∞‡•á ‡§ë‡§®‡§≤‡§æ‡§á‡§® ‡§Æ‡§æ‡§∞‡•ç‡§ï‡•á‡§ü‡§™‡•ç‡§≤‡•á‡§∏ ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à ‡§ú‡•ã ‡§Ü‡§™‡§ï‡•ã ‡§∏‡•Ä‡§ß‡•á ‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§∏‡•á ‡§ú‡•ã‡§°‡§º‡§§‡§æ ‡§π‡•à! ‡§§‡§æ‡§ú‡§æ ‡§ï‡§ü‡§æ‡§à ‡§ï‡§ø‡§è ‡§ó‡§è ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡•ã‡§Ç ‡§ï‡•Ä ‡§™‡•ç‡§∞‡§ö‡•Å‡§∞‡§§‡§æ ‡§ï‡§æ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§è‡§Ç, ‡§ú‡§ø‡§®‡•ç‡§π‡•á‡§Ç ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§î‡§∞ ‡§ú‡•Å‡§®‡•Ç‡§® ‡§ï‡•á ‡§∏‡§æ‡§• ‡§â‡§ó‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§ ‡§Ö‡§™‡§®‡•á ‡§ò‡§∞ ‡§ï‡•á ‡§Ü‡§∞‡§æ‡§Æ ‡§∏‡•á ‡§ñ‡•á‡§§-‡§∏‡•á-‡§Æ‡•á‡§ú ‡§ï‡•á ‡§Ö‡§®‡•Å‡§≠‡§µ ‡§ï‡•ã ‡§Ö‡§™‡§®‡§æ‡§è‡§Ç‡•§ ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ ‡§Æ‡•á‡§Ç ‡§§‡§æ‡§ú‡§æ, ‡§Æ‡•å‡§∏‡§Æ‡•Ä ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®‡•ã‡§Ç ‡§ï‡•á ‡§∏‡•ç‡§µ‡§æ‡§¶ ‡§ï‡§æ ‡§Ü‡§®‡§Ç‡§¶ ‡§≤‡•á‡§§‡•á ‡§π‡•Å‡§è ‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø ‡§ï‡•É‡§∑‡§ø ‡§ï‡§æ ‡§∏‡§Æ‡§∞‡•ç‡§•‡§® ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§ú‡•Å‡§°‡§º‡•á‡§Ç‡•§",
      createAccount: "‡§ñ‡§æ‡§§‡§æ ‡§¨‡§®‡§æ‡§è‡§Ç",
      viewProducts: "‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§¶‡•á‡§ñ‡•á‡§Ç"
    },
    manipuri: {
      title: "‡¶≤‡ßå ‡¶Æ‡¶∞‡ßÄ‡¶¶‡¶ó‡ßÄ ‡¶Æ‡ßá‡¶ú ‡¶´‡¶æ‡¶ì‡¶¨‡¶æ, ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶Ö‡¶Æ‡¶ñ‡¶ï‡ßç‡¶§‡¶¶‡¶æ",
      description: "‡¶®‡¶∂‡¶æ‡¶ó‡ßÄ ‡¶î‡¶®‡¶≤‡¶æ‡¶á‡¶® ‡¶Æ‡¶æ‡¶∞‡ßç‡¶ï‡ßá‡¶ü‡¶™‡ßç‡¶≤‡ßá‡¶∏‡¶§‡¶æ ‡¶§‡¶∞‡¶æ‡¶Æ‡¶®‡¶æ ‡¶≤‡ßã‡¶ï‡ßá‡¶≤ ‡¶´‡¶æ‡¶∞‡ßç‡¶Æ‡¶∞‡¶∂‡¶ø‡¶Ç‡¶ó‡¶æ ‡¶¶‡¶æ‡¶á‡¶∞‡ßá‡¶ï‡ßç‡¶§ ‡¶ï‡¶®‡ßá‡¶ï‡ßç‡¶§ ‡¶§‡ßå‡¶®‡¶¨‡¶ó‡ßÄ‡¶¶‡¶Æ‡¶ï ‡¶§‡ßç‡¶∞‡¶æ‡¶á‡¶¨‡¶ø‡¶∞‡¶ï‡¶™‡¶æ ‡¶Ö‡¶¶‡ßÅ‡¶¨‡ßÅ! ‡¶Ö‡¶•‡¶ø‡¶Ç‡¶¨‡¶æ ‡¶Ö‡¶Æ‡¶∏‡ßÅ‡¶Ç ‡¶™‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ ‡¶Æ‡¶§‡ßá‡¶Ç ‡¶™‡¶æ‡¶Ç‡¶®‡¶æ ‡¶•‡ßå‡¶®‡¶æ‡¶ì‡¶®‡¶æ ‡¶∂‡ßá‡¶Æ‡ßç‡¶¨‡¶æ ‡¶™‡ßã‡ßé‡¶•‡ßã‡¶ï ‡¶ï‡¶Ø‡¶º‡¶æ ‡¶•‡ßÄ‡¶¶‡ßã‡¶ï‡¶â‡•§ ‡¶®‡¶π‡¶æ‡¶ï‡ßç‡¶ï‡ßÄ ‡¶Ø‡ßÅ‡¶Æ‡¶¶‡¶ó‡ßÄ ‡¶´‡¶æ‡¶∞‡ßç‡¶Æ‡¶¶‡¶ó‡ßÄ-‡¶Æ‡ßá‡¶ú ‡¶´‡¶æ‡¶ì‡¶¨‡¶ó‡ßÄ ‡¶è‡¶ï‡ßç‡¶∏‡¶™‡ßá‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶∏ ‡¶≤‡ßå‡•§ ‡¶Ö‡¶ö‡ßå‡¶¨‡¶æ ‡¶Æ‡¶ô‡¶æ‡¶≤‡ßç‡¶≤‡¶æ ‡¶Ö‡¶Æ‡¶∏‡ßÅ‡¶Ç ‡¶Æ‡¶ô‡¶æ‡¶≤‡ßç‡¶≤‡¶æ ‡¶™‡ßã‡ßé‡¶•‡ßã‡¶ï‡¶∂‡¶ø‡¶Ç‡¶ó‡ßÄ ‡¶Æ‡¶ô‡¶æ‡¶≤ ‡¶Ö‡¶¶‡ßÅ ‡¶∂‡¶ï‡ßç‡¶§‡¶æ‡¶ï‡¶®‡¶ø‡¶Ç‡¶¨‡¶ó‡ßÄ‡¶¶‡¶Æ‡¶ï ‡¶≤‡ßã‡¶ï‡ßá‡¶≤ ‡¶è‡¶ó‡ßç‡¶∞‡¶ø‡¶ï‡¶≤‡ßç‡¶ö‡¶∞ ‡¶∏‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶§‡ßå‡¶¨‡¶¶‡¶æ ‡¶à‡¶∂‡¶ø‡¶Ç ‡¶§‡¶ø‡¶≤‡ßç‡¶≤‡ßã‡•§",
      createAccount: "‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶∏‡ßÉ‡¶∑‡ßç‡¶ü‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶®",
      viewProducts: "‡¶™‡¶£‡ßç‡¶Ø ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®"
    },
    assamese: {
      title: "‡¶ñ‡ßá‡¶§‡¶ø‡¶™‡¶•‡¶æ‡ß∞‡ß∞ ‡¶™‡ß∞‡¶æ ‡¶Æ‡ßá‡¶ú‡¶≤‡ßà, ‡¶Æ‡¶æ‡¶§‡ßç‡ß∞ ‡¶è‡¶ü‡¶æ ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï‡¶§",
      description: "‡¶Ü‡¶™‡ßã‡¶®‡¶æ‡¶ï ‡¶™‡ßã‡¶®‡ßá ‡¶™‡ßã‡¶®‡ßá ‡¶∏‡ßç‡¶•‡¶æ‡¶®‡ßÄ‡¶Ø‡¶º ‡¶ï‡ßÉ‡¶∑‡¶ï‡ß∞ ‡¶≤‡¶ó‡¶§ ‡¶∏‡¶Ç‡¶Ø‡ßã‡¶ó ‡¶ï‡ß∞‡¶æ ‡¶Ü‡¶Æ‡¶æ‡ß∞ ‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶® ‡¶¨‡¶ú‡¶æ‡ß∞‡¶§ ‡¶Ü‡¶¶‡ß∞‡¶£‡¶ø ‡¶ú‡¶®‡¶æ‡¶á‡¶õ‡ßã! ‡¶Ø‡¶§‡ßç‡¶®‡ßá‡ß∞‡ßá ‡¶Ü‡ß∞‡ßÅ ‡¶Ü‡¶¨‡ßá‡¶ó‡ßá‡ß∞‡ßá ‡¶â‡ßé‡¶™‡¶æ‡¶¶‡¶ø‡¶§ ‡¶∏‡¶¶‡ßç‡¶Ø ‡¶ö‡¶™‡ßã‡ß±‡¶æ ‡¶∂‡¶∏‡ßç‡¶Ø‡ß∞ ‡¶™‡ßç‡ß∞‡¶æ‡¶ö‡ßÅ‡ß∞‡ßç‡¶Ø ‡¶Ü‡ß±‡¶ø‡¶∑‡ßç‡¶ï‡¶æ‡ß∞ ‡¶ï‡ß∞‡¶ï‡•§ ‡¶Ü‡¶™‡ßã‡¶®‡¶æ‡ß∞ ‡¶ò‡ß∞‡ß∞ ‡¶Ü‡ß∞‡¶æ‡¶Æ‡ß∞ ‡¶™‡ß∞‡¶æ ‡¶ñ‡ßá‡¶§‡¶ø‡ß∞-‡¶™‡ß∞‡¶æ-‡¶Æ‡ßá‡¶ú‡¶≤‡ßà‡¶ï‡ßá ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û‡¶§‡¶æ ‡¶ó‡ßç‡ß∞‡¶π‡¶£ ‡¶ï‡ß∞‡¶ï‡•§ ‡¶∏‡¶Å‡¶ö‡¶æ‡¶ï‡ßà‡¶Ø‡¶º‡ßá ‡¶∏‡¶§‡ßá‡¶ú, ‡¶ã‡¶§‡ßÅ‡¶ï‡¶æ‡¶≤‡ßÄ‡¶® ‡¶ñ‡¶æ‡¶¶‡ßç‡¶Ø‡ß∞ ‡¶∏‡ßã‡ß±‡¶æ‡¶¶ ‡¶â‡¶™‡¶≠‡ßã‡¶ó ‡¶ï‡ß∞‡¶ø ‡¶∏‡ßç‡¶•‡¶æ‡¶®‡ßÄ‡¶Ø‡¶º ‡¶ï‡ßÉ‡¶∑‡¶ø‡¶ï ‡¶∏‡¶Æ‡ß∞‡ßç‡¶•‡¶® ‡¶ï‡ß∞‡¶æ‡¶§ ‡¶Ü‡¶Æ‡¶æ‡ß∞ ‡¶≤‡¶ó‡¶§ ‡¶Ø‡ßã‡¶ó‡¶¶‡¶æ‡¶® ‡¶ï‡ß∞‡¶ï‡•§",
      createAccount: "‡¶è‡¶ï‡¶æ‡¶â‡¶£‡ßç‡¶ü ‡¶∏‡ßÉ‡¶∑‡ßç‡¶ü‡¶ø ‡¶ï‡ß∞‡¶ï",
      viewProducts: "‡¶™‡¶£‡ßç‡¶Ø ‡¶ö‡¶æ‡¶ì‡¶ï"
    }
  };

  const changeLanguage = (newLanguage: LanguageOption) => {
    setIsVisible(false);
    setTimeout(() => {
      setLanguage(newLanguage);
      setIsVisible(true);
    }, 300);
  };

  useEffect(() => {
    const timer = setTimeout(() => {
      setShowSnackbar(false);
    }, 10000); // Display for 10 seconds
    return () => clearTimeout(timer);
  }, []);

  return (
    <motion.div 
      initial="hidden"
      animate="visible"
      variants={staggerChildren}
      className="flex flex-col md:flex-row gap-5 mb-20 mt-10 justify-between items-center"
    >
      <Snackbar 
        open={showSnackbar} 
        autoHideDuration={10000} // Display for 10 seconds
        TransitionComponent={TransitionUp}
        anchorOrigin={{ vertical: "top", horizontal: "center" }}
      >
        <MuiAlert 
          elevation={6} 
          variant="filled" 
          severity="info" 
          className="text-xl font-bold p-6" // Make it bigger
        >
          üöú Welcome to our marketplace!  
          <br /> üåç Multi-language support: **‡§Ö‡§¨ ‡§π‡§Æ ‡§Ü‡§™‡§ï‡•á ‡§ó‡§æ‡§Å‡§µ ‡§Æ‡•á‡§Ç!**  
        </MuiAlert>
      </Snackbar>
      <motion.div 
        className='flex flex-col'
        animate={isVisible ? "visible" : "hidden"}
        variants={fadeIn}
      >
        <div className="absolute top-24 right-10 flex gap-2 bg-white p-2 rounded-lg shadow-md z-10">
          <button 
            onClick={() => changeLanguage('english')} 
            className={`px-2 py-1 rounded-md text-sm ${language === 'english' ? 'bg-appleGreen text-white' : 'bg-gray-100'}`}
          >
            English
          </button>
          <button 
            onClick={() => changeLanguage('hindi')} 
            className={`px-2 py-1 rounded-md text-sm ${language === 'hindi' ? 'bg-appleGreen text-white' : 'bg-gray-100'}`}
          >
            ‡§π‡§ø‡§Ç‡§¶‡•Ä
          </button>
          <button 
            onClick={() => changeLanguage('manipuri')} 
            className={`px-2 py-1 rounded-md text-sm ${language === 'manipuri' ? 'bg-appleGreen text-white' : 'bg-gray-100'}`}
          >
            ‡¶Æ‡¶£‡¶ø‡¶™‡ßÅ‡¶∞‡ßÄ
          </button>
          <button 
            onClick={() => changeLanguage('assamese')} 
            className={`px-2 py-1 rounded-md text-sm ${language === 'assamese' ? 'bg-appleGreen text-white' : 'bg-gray-100'}`}
          >
            ‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ
          </button>
        </div>
        
        <motion.div 
          className="text-4xl md:text-5xl font-bold"
          variants={fadeIn}
        >
          {content[language].title}
        </motion.div>
        
        <motion.div 
          className="mt-8 text-lg"
          variants={fadeIn}
        >
          {content[language].description}
        </motion.div>
        
        <motion.div 
          className="mt-8 flex flex-wrap gap-4"
          variants={fadeIn}
        >
          <motion.button
            initial="rest"
            whileHover="hover"
            variants={buttonHover}
            className="text-lg px-4 py-3 bg-appleGreen text-white flex items-center rounded-md"
            type="button"
            onClick={() => {
              if (logInData.loggedIn) {
                navigate('/my-profile');
              } else {
                navigate('/sign-up');
              }
            }}
          >
            {content[language].createAccount}
            <KeyboardArrowRightIcon />
          </motion.button>
          
          <NavLink to="/store">
            <motion.button 
              initial="rest"
              whileHover="hover"
              variants={buttonHover}
              className="text-lg px-4 py-3 bg-teaGreen1 flex items-center rounded-md"
            >
              {content[language].viewProducts}
              <KeyboardArrowRightIcon />
            </motion.button>
          </NavLink>
        </motion.div>
      </motion.div>

      <motion.div 
        className="flex flex-col gap-5 mt-10 md:mt-0"
        variants={staggerChildren}
      >
        <motion.div 
          className="h-64 md:h-80 w-full md:w-112 overflow-hidden rounded-lg"
          variants={fadeIn}
        >
          <motion.img
            initial="rest"
            whileHover="hover"
            variants={imageHover}
            className="object-cover w-full h-full rounded-lg"
            src="/farmer-main-page.jpg"
            alt="Farmer working in field"
          />
        </motion.div>
        
        <motion.div 
          className="flex gap-5 flex-col sm:flex-row"
          variants={staggerChildren}
        >
          <motion.div 
            className="w-full sm:w-80 h-40 overflow-hidden rounded-lg"
            variants={fadeIn}
          >
            <motion.img
              initial="rest"
              whileHover="hover"
              variants={imageHover}
              className="object-cover w-full h-full rounded-lg"
              src="/cow-eatting-grass.jpg"
              alt="Cow eating grass"
            />
          </motion.div>
          
          <motion.div 
            className="w-full sm:w-80 h-40 overflow-hidden rounded-lg"
            variants={fadeIn}
          >
            <motion.img
              initial="rest"
              whileHover="hover"
              variants={imageHover}
              className="object-cover w-full h-full rounded-lg"
              src="/vegetables-field.jpg"
              alt="Field of vegetables"
            />
          </motion.div>
        </motion.div>
      </motion.div>
    </motion.div>
  );
};

export default HeroSection;